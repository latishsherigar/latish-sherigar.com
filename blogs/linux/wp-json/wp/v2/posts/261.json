{"id":261,"date":"2021-05-07T22:20:10","date_gmt":"2021-05-07T16:50:10","guid":{"rendered":"http:\/\/www.latish-sherigar.com\/blogs\/linux\/?p=335"},"modified":"2021-05-07T22:20:11","modified_gmt":"2021-05-07T16:50:11","slug":"nodemcu-with-buzzer","status":"publish","type":"post","link":"http:\/\/localhost\/blogs\/linux\/nodemcu-with-buzzer\/","title":{"rendered":"NodeMCU with buzzer"},"content":{"rendered":"\n<p>If you are trying out the active buzzer module with Arduino and NodeMCU , a point to be remembered is the power consumption of the buzzer. Although the same code works for both the MCU&#8217;s , there is a difference in the runtime behavior.  <\/p>\n\n\n\n<p>In my case I noticed that I was not able to upload the code on NodeMCU as it appeared that the micro controller was kind of resetting or some internal trip switch was getting activated. I therefore removed the buzzer module and uploaded the code on NodeMCU and then reconnected the buzzer again. The GPIO pin which was connected to the buzzer module and which I had coded to be 5V started to go zero volts. These 2 points made be think that there surely was some power related issue and may be the buzzer was overloading the NodeMCU board. Just to add Arduino had worked fine with this connection and therefore i had gone ahead with the same design on NodeMCU. I therefore decided to drive the buzzer via a relay and as I had suspected the weird behavior went away. I was now able to upload the code on to NodeMCU when the buzzer was connected and also the buzzer module worked fine as expected in the code. I then did a search and found a post which confirmed by analysis. The design in the post does talk about the power consumption limit in NodeMCU and how it can be worked around. <\/p>\n\n\n\n<figure class=\"wp-block-embed-wordpress wp-block-embed is-type-wp-embed is-provider-techtutorialsx\"><div class=\"wp-block-embed__wrapper\">\nhttps:\/\/techtutorialsx.com\/2016\/05\/07\/esp826-controlling-a-buzzer\/\n<\/div><\/figure>\n","protected":false},"excerpt":{"rendered":"<p>If you are trying out the active buzzer module with Arduino and NodeMCU , a point to be remembered is the power consumption of the buzzer. Although the same code works for both the MCU&#8217;s , there is a difference in the runtime behavior. In my case I noticed that I was not able to &hellip; <a href=\"http:\/\/localhost\/blogs\/linux\/nodemcu-with-buzzer\/\" class=\"more-link\">Continue reading <span class=\"screen-reader-text\">NodeMCU with buzzer<\/span><\/a><\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[],"tags":[],"_links":{"self":[{"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/posts\/261"}],"collection":[{"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/comments?post=261"}],"version-history":[{"count":0,"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/posts\/261\/revisions"}],"wp:attachment":[{"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/media?parent=261"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/categories?post=261"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/localhost\/blogs\/linux\/wp-json\/wp\/v2\/tags?post=261"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}